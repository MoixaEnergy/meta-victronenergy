#! /bin/sh

# Both connman and pppd maintain their own resolv.conf files in
# accordance to the connections they manage.  Monitor both for changes
# and point the local dnsmasq proxy at the preferred one: connman if
# it has a nameserver entry, pppd otherwise.  The polling mode built
# into dnsmasq is unsuitable as it picks the file with the most recent
# timestamp, which doesn't necessarily correspond to the preferred
# connection.

CM_RESOLV_CONF=/run/connman/resolv.conf
PPP_RESOLV_CONF=/run/ppp/resolv.conf
RESOLV_CONF=/run/resolv.conf

# monitor the the directories since the files might be replaced
WATCH_DIRS="${CM_RESOLV_CONF%/*} ${PPP_RESOLV_CONF%/*}"

update_localsettings() {
    dev=$(ip route get 1.1.1.1 | sed -n 's/.*\bdev\b *\([^ ]*\).*/\1/p')

    case $dev in
        eth*) conn=1 ;;
        w*)   conn=2 ;;
        ppp*) conn=3 ;;
        *)    conn=0 ;;
    esac

    dbus-send --system --type=method_call --dest=com.victronenergy.settings \
              /Settings com.victronenergy.Settings.AddSilentSetting \
              string:'' string:/System/ActiveNetworkConnection \
              int32:-1 string:i int32:-1 int32:3

    dbus-send --system --print-reply=literal --type=method_call \
              --dest=com.victronenergy.settings \
              /Settings/System/ActiveNetworkConnection \
              com.victronenergy.BusItem.SetValue int32:$conn
}

# make sure the files exist, or dnsmasq gets unhappy
touch ${CM_RESOLV_CONF} ${PPP_RESOLV_CONF}

while true; do
    if grep -q ^nameserver ${CM_RESOLV_CONF}; then
        resolv_conf=${CM_RESOLV_CONF}
    else
        resolv_conf=${PPP_RESOLV_CONF}
    fi

    ln -sf ${resolv_conf} ${RESOLV_CONF}

    /etc/init.d/dnsmasq reload
    update_localsettings && timeout=30 || timeout=10

    inotifywait -qq -t $timeout -e close_write ${WATCH_DIRS}
done
